DEFAULT_CONFIG = dict(
    estimator_runconfig=dict(
        model_dir=None,
        tf_random_seed=None,
        save_summary_steps=100,
        save_checkpoints_steps=1000,
        save_checkpoints_secs=None,
        session_config=None,
        keep_checkpoint_max=5,
        keep_checkpoint_every_n_hours=10000,
        log_step_count_steps=100,
        train_distribute=None,
        device_fn=None,
        protocol=None,
        eval_distribute=None,
        experimental_distribute=None
    ),
    data=dict(
        training=dict(
            name=None,
            data_type='tfrecord',
            options=dict(
                tfrecord_pattern='/data/stars/user/uujjwal/cvpr2019/ssm-custom/data/mscoco/train/*',
                read_buffer_size=1024,
                num_parallel_reads=10,
                preprocessing_num_parallel_calls=10,
                shuffle=True,
                shuffle_buffer_size=1024*256,
                reshuffle_each_iteration=False,
                cache = True,
                cache_dir = '',
                batchsize=2,
                drop_remainder=True,
                prefetch_buffer_size=5
            )
        ),
        validation=dict(
            name=None,
            data_type='tfrecord',
            options=dict(
                tfrecord_pattern='/data/stars/user/uujjwal/cvpr2019/ssm-custom/data/mscoco/train/*',
                batchsize=2
            )
        ),
        testing=dict(
            name=None,
            data_type='image_list',
            options=dict(
                image_list_file='',
                num_header_lines=0,
                batchsize=2,
                drop_remainder=True
            )
        ),
        preprocessing=dict(
            input_height=512,
            input_width=512,
            max_num_boxes=100,
            data_augmentation=dict(
                random_horizontal_flip=True,
                random_brightness=dict(
                    apply=True,
                    max_delta=0.3

                ),
                random_contrast=dict(
                    apply=True,
                    lower=0.0,
                    upper=3.0

                ),
                random_hue=dict(
                    apply=True,
                    max_delta=0.2
                ),
                random_saturation=dict(
                    apply=True,
                    lower=0.0,
                    upper=1.5
                ),
            )
        ),
        numclasses=80,
    ),
    gpuconfig=dict(
        use_horovod=True,
        numgpus=4
    ),
    classes=dict(
        labelmap_proto_file='',
    ),
    model=dict(
        rnn=dict(
            name='lstm',
            options=dict(
                use_peepholes=False,
                cell_clip=None,
                num_proj=None,
                proj_clip=None,
                forget_bias=1.0,
                activation=None,
            )
        )
    )
)
